import React, { useState } from "react";
import {
  Card,
  Form,
  Upload,
  Typography,
  message,
  Button,
  Space,
  Modal,
} from "antd";
import { CameraOutlined, DeleteOutlined, EyeOutlined } from "@ant-design/icons";
import { useSalesVisitorStore } from "../../store/sales-visitor";
import { RcFile } from "antd/es/upload";
import { API_CONFIG } from "../../api/config";

const { Text } = Typography;

interface PhotoUploadCardProps {
  mode?: "new" | "edit";
}

const PhotoUploadCard: React.FC<PhotoUploadCardProps> = ({ mode }) => {
  const {
    uploadSingleImage,
    removeUploadedImage,
    uploadedImage,
    uploadLoading,
    uploadError,
    currentUploadProgress,
    clearUploadError,
    getFilenameForSave,
  } = useSalesVisitorStore();

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏°
  const [existingImageUrl, setExistingImageUrl] = React.useState<string | null>(
    null
  );

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á full URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ
  const createFullUrl = (url: string): string => {
    if (url.startsWith("http")) {
      return url;
    }
    const baseUrl = API_CONFIG.baseUrl;
    return `${baseUrl}${url}`;
  };
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π–ø‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏´‡∏°‡∏î edit
  React.useEffect(() => {
    if (mode === "edit") {
      setExistingImageUrl(createFullUrl(uploadedImage?.url || ""));
    }
  }, [mode]);

  // üîß ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏µ‡πâ
  React.useEffect(() => {
    if (mode === "edit") {
      setExistingImageUrl(null);
    }
  }, [mode]);

  const hasAnyImage = uploadedImage !== null;

  const handleUpload = async (file: RcFile): Promise<boolean> => {
    const isLt5M = file.size / 1024 / 1024 < 5;
    if (!isLt5M) {
      message.error("‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB!");
      return false;
    }

    const isJpgOrPng =
      file.type === "image/jpeg" ||
      file.type === "image/png" ||
      file.type === "image/jpg";
    if (!isJpgOrPng) {
      message.error("‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå JPG ‡πÅ‡∏•‡∏∞ PNG ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!");
      return false;
    }

    try {
      clearUploadError();
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏π‡∏õ)
      if (existingImageUrl) {
        setExistingImageUrl(null);
      }

      const result = await uploadSingleImage(file);
      message.success(`${file.name} ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
      return false;
    } catch (error) {
      console.error("‚ùå Upload error:", error);
      message.error(`‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ${file.name} ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß`);
      return false;
    }
  };

  const handleRemove = () => {
    removeUploadedImage();
    message.success("‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡πâ‡∏ß");
  };

  const handleRemoveExisting = () => {
    setExistingImageUrl(null);
    message.success("‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß");
  };

  const [previewVisible, setPreviewVisible] = useState(false);
  const [previewImage, setPreviewImage] = useState("");

  const handlePreview = (url: string) => {
    setPreviewImage(url);
    setPreviewVisible(true);
  };

  return (
    <Card
      title={
        <div
          style={{
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between",
          }}
        >
          <div style={{ display: "flex", alignItems: "center" }}>
            <CameraOutlined style={{ marginRight: "8px", color: "#1890ff" }} />
            Visit Photos
          </div>
        </div>
      }
      style={{ marginBottom: "24px" }}
      styles={{ header: { background: "#fafafa" } }}
    >
      {/* ‡πÅ‡∏™‡∏î‡∏á Error */}
      {uploadError && (
        <div
          style={{
            marginBottom: "16px",
            padding: "8px 12px",
            background: "#fff2f0",
            border: "1px solid #ffccc7",
            borderRadius: "6px",
            color: "#cf1322",
          }}
        >
          <Text type="danger">Error: {uploadError}</Text>
        </div>
      )}

      {/* ‡πÅ‡∏™‡∏î‡∏á Loading */}
      {uploadLoading && (
        <div
          style={{
            marginBottom: "16px",
            padding: "8px 12px",
            background: "#e6f7ff",
            border: "1px solid #91d5ff",
            borderRadius: "6px",
            color: "#1890ff",
          }}
        >
          <Text>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡§™‡πÇ‡∏´‡∏•‡∏î... {currentUploadProgress}%</Text>
        </div>
      )}

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
      {existingImageUrl && (
        <div style={{ marginBottom: "16px" }}>
          <Text
            strong
            style={{ display: "block", marginBottom: "12px", color: "#1890ff" }}
          >
            ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°:
          </Text>
          <div
            style={{
              display: "flex",
              alignItems: "center",
              padding: "12px",
              border: "1px solid #e6f7ff",
              borderRadius: "8px",
              marginBottom: "8px",
              background: "#f6ffed",
              transition: "box-shadow 0.2s",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.boxShadow = "0 2px 8px rgba(0,0,0,0.1)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.boxShadow = "none";
            }}
          >
            {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û thumbnail */}
            <div
              style={{
                width: "60px",
                height: "60px",
                borderRadius: "6px",
                overflow: "hidden",
                border: "1px solid #d9d9d9",
                flexShrink: 0,
              }}
            >
              <img
                src={existingImageUrl}
                alt="Existing image"
                style={{
                  width: "100%",
                  height: "100%",
                  objectFit: "cover",
                }}
              />
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå */}
            <div
              style={{
                flex: 1,
                marginLeft: "12px",
                minWidth: 0,
              }}
            >
              <div
                style={{
                  fontWeight: "500",
                  fontSize: "14px",
                  marginBottom: "4px",
                }}
              >
                ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </div>
              <div
                style={{
                  fontSize: "12px",
                  color: "#666",
                  marginBottom: "2px",
                }}
              >
                <span style={{ color: "#1890ff" }}>üìÅ ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°</span>
              </div>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
            <Space size="small">
              <Button
                type="text"
                size="small"
                icon={<EyeOutlined />}
                onClick={() => handlePreview(existingImageUrl)}
                style={{ color: "#1890ff" }}
                title="‡∏î‡∏π‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"
              />
              <Button
                type="text"
                size="small"
                icon={<DeleteOutlined />}
                onClick={handleRemoveExisting}
                danger
                title="‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏°"
                disabled={uploadLoading}
              />
            </Space>
          </div>
        </div>
      )}

      {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß - Compact List Style */}
      {uploadedImage && (
        <div style={{ marginBottom: "16px" }}>
          <Text
            strong
            style={{ display: "block", marginBottom: "12px", color: "#52c41a" }}
          >
            ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß:
          </Text>

          <div
            style={{
              display: "flex",
              alignItems: "center",
              padding: "12px",
              border: "1px solid #f0f0f0",
              borderRadius: "8px",
              marginBottom: "8px",
              background: "#fafafa",
              transition: "box-shadow 0.2s",
            }}
            onMouseEnter={(e) => {
              e.currentTarget.style.boxShadow = "0 2px 8px rgba(0,0,0,0.1)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.boxShadow = "none";
            }}
          >
            {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û thumbnail */}
            <div
              style={{
                width: "60px",
                height: "60px",
                borderRadius: "6px",
                overflow: "hidden",
                border: "1px solid #d9d9d9",
                flexShrink: 0,
              }}
            >
              <img
                src={createFullUrl(uploadedImage.url)}
                alt={uploadedImage.originalName}
                style={{ width: "100%", height: "100%", objectFit: "cover" }}
              />
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå */}
            <div
              style={{
                flex: 1,
                marginLeft: "12px",
                minWidth: 0,
                cursor: "pointer",
              }}
              onClick={() => handlePreview(createFullUrl(uploadedImage.url))}
            >
              <div
                style={{
                  fontWeight: "500",
                  fontSize: "14px",
                  marginBottom: "4px",
                  overflow: "hidden",
                  textOverflow: "ellipsis",
                  whiteSpace: "nowrap",
                }}
              >
                {uploadedImage.originalName}
              </div>
              <div
                style={{ fontSize: "12px", color: "#666", marginBottom: "2px" }}
              >
                <span style={{ color: "#52c41a" }}>‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</span>
              </div>
              <div
                style={{
                  fontSize: "10px",
                  color: "#999",
                  fontFamily: "monospace",
                  overflow: "hidden",
                  textOverflow: "ellipsis",
                  whiteSpace: "nowrap",
                }}
                title={uploadedImage.filename}
              >
                {uploadedImage.filename}
              </div>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
            <Space size="small">
              <Button
                type="text"
                size="small"
                icon={<DeleteOutlined />}
                onClick={handleRemove}
                danger
                title="‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"
                disabled={uploadLoading}
              />
            </Space>
          </div>
        </div>
      )}

      {/* Upload Area - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÉ‡∏î‡πÜ */}
      {!hasAnyImage && (
        <Form.Item name="photos">
          <Upload.Dragger
            accept="image/*"
            fileList={[]}
            beforeUpload={handleUpload}
            disabled={uploadLoading}
            style={{
              background: uploadLoading ? "#f5f5f5" : "#fafafa",
              border: "2px dashed #d9d9d9",
              borderRadius: "8px",
              minHeight: "100px",
            }}
          >
            <div style={{ padding: "20px", textAlign: "center" }}>
              <CameraOutlined
                style={{
                  fontSize: "32px",
                  color: uploadLoading ? "#bfbfbf" : "#1890ff",
                  marginBottom: "12px",
                }}
              />
              <div>
                <Text
                  style={{
                    fontSize: "14px",
                    color: uploadLoading ? "#999" : "#666",
                    display: "block",
                    marginBottom: "4px",
                  }}
                >
                  {uploadLoading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î..." : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"}
                </Text>
                <Text
                  style={{
                    fontSize: "14px",
                    color: uploadLoading ? "#999" : "#666",
                  }}
                >
                  Click or drag photo here
                </Text>
              </div>
              <div style={{ marginTop: "8px" }}>
                <Text type="secondary" style={{ fontSize: "12px" }}>
                  Support: JPG, PNG ‚Ä¢ Max 5MB ‚Ä¢ One photo only
                </Text>
              </div>
            </div>
          </Upload.Dragger>
        </Form.Item>
      )}
      <Modal
        open={previewVisible}
        footer={null}
        onCancel={() => setPreviewVisible(false)}
        centered
        width="80%"
        styles={{
          body: {
            padding: "20px",
            textAlign: "center",
            maxHeight: "80vh",
            overflow: "auto",
          },
        }}
      >
        <img
          src={previewImage}
          style={{
            maxWidth: "100%",
            maxHeight: "70vh", // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏ô 70% ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
            height: "auto",
            width: "auto",
            objectFit: "contain", // ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏¥‡∏î‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ß
            display: "block",
            margin: "0 auto",
          }}
        />
      </Modal>
    </Card>
  );
};

export default PhotoUploadCard;
